var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function (a, b, c) {
    a != Array.prototype && a != Object.prototype && (a[b] = c.value)
};
$jscomp.getGlobal = function (a) {
    return "undefined" != typeof window && window === a ? a : "undefined" != typeof global && null != global ? global : a
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.SYMBOL_PREFIX = "jscomp_symbol_";
$jscomp.initSymbol = function () {
    $jscomp.initSymbol = function () {};
    $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol)
};
$jscomp.Symbol = function () {
    var a = 0;
    return function (b) {
        return $jscomp.SYMBOL_PREFIX + (b || "") + a++
    }
}();
$jscomp.initSymbolIterator = function () {
    $jscomp.initSymbol();
    var a = $jscomp.global.Symbol.iterator;
    a || (a = $jscomp.global.Symbol.iterator = $jscomp.global.Symbol("iterator"));
    "function" != typeof Array.prototype[a] && $jscomp.defineProperty(Array.prototype, a, {
        configurable: !0,
        writable: !0,
        value: function () {
            return $jscomp.arrayIterator(this)
        }
    });
    $jscomp.initSymbolIterator = function () {}
};
$jscomp.arrayIterator = function (a) {
    var b = 0;
    return $jscomp.iteratorPrototype(function () {
        return b < a.length ? {
            done: !1,
            value: a[b++]
        } : {
            done: !0
        }
    })
};
$jscomp.iteratorPrototype = function (a) {
    $jscomp.initSymbolIterator();
    a = {
        next: a
    };
    a[$jscomp.global.Symbol.iterator] = function () {
        return this
    };
    return a
};
$jscomp.makeIterator = function (a) {
    $jscomp.initSymbolIterator();
    var b = a[Symbol.iterator];
    return b ? b.call(a) : $jscomp.arrayIterator(a)
};
var script_tag = document.currentScript,
    where = void 0 == script_tag.getAttribute("data-where") ? "slideshow" : script_tag.getAttribute("data-where"),
    folder = void 0 == script_tag.getAttribute("data-folder") ? "/img" : script_tag.getAttribute("data-folder"),
    pause = void 0 == script_tag.getAttribute("data-timeout") ? "2500" : script_tag.getAttribute("data-timeout"),
    STORAGEDIV = "plokkerdeplock";
if (!document.body.contains(document.getElementById(STORAGEDIV))) {
    var div = document.createElement("div");
    div.id = STORAGEDIV;
    document.body.firstChild ? document.body.insertBefore(div, document.body.firstChild) : document.body.appendChild(div)
}
var xhr = new XMLHttpRequest;
xhr.open("GET", folder, !0);
xhr.responseType = "document";
xhr.onload = function () {
    if (200 === xhr.status) {
        var a = function (b) {
                var c = document.getElementsByClassName("mySlides");
                d++;
                d > c.length && (d = 1);
                e = c[d - 1];
                document.getElementById(b).style.backgroundImage = "url(" + e.src + ")";
                setTimeout(function () {
                    a(b)
                }, pause)
            },
            b = xhr.response.getElementsByTagName("a");
        b = $jscomp.makeIterator(b);
        for (var c = b.next(); !c.done; c = b.next()) x = c.value, x.href.match(/\.(jpe?g|png|gif)$/i) && (c = document.createElement("img"), c.src = x.href, c.setAttribute("style", "display: none"), c.setAttribute("class",
            "mySlides"), document.getElementById(STORAGEDIV).append(c));
        var d = 0,
            e = 0;
        a(where)
    } else alert("Fout tijdens het lezen: " + xhr.status)
};
xhr.send();